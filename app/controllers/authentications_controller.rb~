class AuthenticationsController < ApplicationController
  # GET /authentications
  # GET /authentications.json
  def index
    @authentications = Authentication.all

    respond_to do |format|
      format.html # index.html.erb
      format.json { render json: @authentications }
    end
  end

  # GET /authentications/1
  # GET /authentications/1.json
  def show
    @authentication = Authentication.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.json { render json: @authentication }
    end
  end

  # GET /authentications/new
  # GET /authentications/new.json
  def new
    @authentication = Authentication.new

    respond_to do |format|
      format.html # new.html.erb
      format.json { render json: @authentication }
    end
  end

  # GET /authentications/1/edit
  def edit
    @authentication = Authentication.find(params[:id])
  end

  # POST /authentications
  # POST /authentications.json
def create
  auth = request.env["omniauth.auth"]
 puts "cccccccccccccccccccccc"
  # Try to find authentication first
  authentication = Authentication.find_by_provider_and_uid(auth['provider'], auth['uid'])
 
  if authentication
p 3333333333333333333333333333333
    user = authentication.user
    session[:user_id] = user.id
p 444444444444444444444444444444
    puts "++++++++++++++++++++++++++++++++++"
    # Authentication found, sign the user in.
    flash[:notice] = "Signed in successfully."
    #~ sign_in_and_redirect(:user, authentication.user)
    
     redirect_to store_url
  else
    puts "_________________________________________"
    # Authentication not found, thus a new user.
    user = User.new
p 11111111111111111111111111111
    user.apply_omniauth(auth)
p 2222222222222222222222222222
    if user.save(:validate => false)
      #user = authentication.user
    session[:user_id] = user.id
      flash[:notice] = "Account created and signed in successfully."
       redirect_to store_url
    else
      flash[:error] = "Error while creating a user account. Please try again."
      redirect_to store_url
    end
  end
end

  # PUT /authentications/1
  # PUT /authentications/1.json
  def update
    @authentication = Authentication.find(params[:id])

    respond_to do |format|
   
    end
  end

  # DELETE /authentications/1
  # DELETE /authentications/1.json
  def destroy
    @authentication = Authentication.find(params[:id])
    @authentication.destroy

    respond_to do |format|
      format.html { redirect_to authentications_url }
      format.json { head :no_content }
    end
  end
end
